---
layout: base
pagination:
  data: scorecard.index.stations
  size: 1
  alias: station
permalink: /scorecard/station/{{ station.id }}/
---

<style>
  .station-layout {
    display: flex;
    flex-wrap: wrap;
    gap: 1em;
  }
  .station-details,
  .station-map {
    flex: 1 1 45%;
    min-width: 300px;
  }
  @media (max-width: 768px) {
    .station-layout {
      flex-direction: column;
    }
  }
</style>

<div class="content">
  <div>
    <a href="/scorecard">Scorecard</a>
    > <a href="/scorecard/{{ station.state_abbr | slug }}/">{{ station.state_name }}</a>
    > {{ station.name }}
  </div>
  
  <h1>{{ station.name }}</h1>

  <div class="station-layout">
    <div class="station-details">
      <table>
        <tr>
          <th>ID</th>
          <td>{{ station.id }}</td>
        </tr>
        <tr>
          <th>USAF</th>
          <td>{{ station.usaf }}</td>
        </tr>
        <tr>
          <th>WBAN</th>
          <td>{{ station.wban }}</td>
        </tr>
        <tr>
          <th>State</th>
          <td>{{ station.state_name }}</td>
        </tr>
        <tr>
          <th>Latitude</th>
          <td>{{ station.latitude }}</td>
        </tr>
        <tr>
          <th>Longitude</th>
          <td>{{ station.longitude }}</td>
        </tr>
        <tr>
          <th>Elevation</th>
          <td>{{ station.elev }} m</td>
        </tr>
        <tr>
          <th>Begin</th>
          <td>{{ station.begin }}</td>
        </tr>
        <tr>
          <th>End</th>
          <td>{{ station.end }}</td>
        </tr>
      </table>
    </div>
    <div class="station-map">
      <div id="map-container" style="width: 100%; max-width: 600px; overflow: hidden;">
        <!-- D3.js map will be rendered here -->
      </div>
    </div>
  </div>

  <h2>Temperature</h2>

  <img
    id="variable-image"
    src="https://sa.dynamical.org/station_{{ station.id }}_temperature_2m_obs_latest.png"
    alt="Temperature obs for {{ station.name }}"
    style="max-width: 100%; height: auto;"
  />

  <img
    id="variable-image"
    src="https://sa.dynamical.org/station_{{ station.id }}_temperature_2m_rmse_by_lead_time_latest.png"
    alt="Temperature RMSE by lead time for {{ station.name }}"
    style="max-width: 100%; height: auto;"
  />

</div>

<script src="https://d3js.org/d3.v7.min.js"></script>
<script src="https://unpkg.com/topojson-client@3"></script>
<script>
  const station = {{ station | dump | safe }};
  const width = 600;
  const height = 400;

  const svg = d3.select("#map-container").append("svg")
      .attr("viewBox", [0, 0, width, height])
      .attr("width", "100%")
      .attr("height", "auto")
      .attr("style", "max-width: 100%;");

  d3.json("https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json").then(us => {
    const state = topojson.feature(us, us.objects.states).features.find(d => d.properties.name === station.state_name);

    if (!state) {
      console.error("Could not find state for station:", station);
      return;
    }

    const projection = d3.geoIdentity().reflectY(true);
    const path = d3.geoPath(projection);

    // Fit the projection to the state
    projection.fitExtent([[0, 0], [width, height]], state);

    svg.append("g")
        .attr("fill", "#fff")
        .attr("stroke", "#000")
      .selectAll("path")
      .data([state])
      .join("path")
        .attr("d", path);

    svg.append("circle")
        .attr("cx", projection([station.longitude, station.latitude])[0])
        .attr("cy", projection([station.longitude, station.latitude])[1])
        .attr("r", 5)
        .attr("fill", "blue");
  });
</script>
